subroutine Overlappoints_random_search(x0)

    real*8, dimension(n), intent(in)::x0
    real*8, dimension(size(x0)) :: xk, xknext, directions, h, z
    real*8 :: distance, mindist, R
    integer::i,j,toolong,itercount
    logical::found
    
    itercount = 0
    
    xk = x0
    
    directions = 0
    
    mindist = rho_y(Psi(xk) + a,Phi(xk))
    
    distance = rho_y(Psi(xk) + a,Phi(xk))
    
    print*, 'delta = ', delta
    
    do while (rho_y(Psi(xk) + a,Phi(xk))>eps)
    
        toolong = 0
    
        itercount = itercount + 1
        
        print*, '---------'
        
        print*, 'Starting iteration # ', itercount
    
        print*, 'Current distance between the functions is:'
        
        write(*,'(f12.8)') rho_y(Psi(xk) + a,Phi(xk))
        
        found = .false.
    
        h = (c2-c1)*(2*alpha)**(-1)*rho_y(Psi(xk) + a,Phi(xk))
        
        print*, 'Current seek radius is:'
        
        write(*,'(2f12.8)') h
          
        print*, 'On this step, the condition is:'
            
        write(*,'(f20.8)') delta*rho_y(Psi(xk) + a,Phi(xk))
         
        do while (found .eqv. .false.)
        
            toolong = toolong + 1
        
            call random_number(z)
    
            xknext = xk + h * (-1 + 2*z)
            
            do j = 1,size(xk)
            
            if (xknext(j)>c2(j)) xknext(j)=c2(j)
            
            if (xknext(j)<c1(j)) xknext(j)=c1(j)
            
            enddo
        
            write(132,'(3f12.4)') xknext
            
            if (toolong == 100) then
            
                print*, 'too long.'
                
                exit
                
            endif
            
            !print*, 'R', R
         
            !if ((mindist>rho_y(Psi(xknext)+a,Phi(xk))) .and. (rho_x(xknext,(c1+c2)/2)<=1)) mindist = rho_y(Psi(xknext)+a,Phi(xk))
         
            if ((rho_y(Psi(xknext)+a,Phi(xk)) <= delta*distance) ) then
        
                distance = rho_y(Psi(xknext) + a,Phi(xknext))
        
                found = .true.
                
                print*, '%%%%%%%%%%%%%%%%%%%%%%%'
                
                print*, 'Found!'
                
                write(131,'(f12.5)') xknext
                
                delta = 1.0 - beta / alpha
                
                print*, 'toolong: ', toolong
                
                toolong = 0
                
                print*, 'The condition satisfied with distance:'
                
                write(*,'(f12.8)'), rho_y(Psi(xknext)+a,Phi(xk))
            
                print*, 'New distance between the functions:'
                
                write(*,'(f12.8)'), distance
            
                print*, '%%%%%%%%%%%%%%%%%%%%%%%'
        
                xk = xknext
                
                print*, 'xknext:'
        
                write(*,'(f12.8)') xknext
                
            else
            
                !R = R + rho_x(xknext,xk)
        
            endif
        
        enddo
        
        if (found .eqv. .false.) then
        
            print*, 'Fail.'
            
            print*, 'Minimal distance found is: '
            
            write(*,'(f12.5)') mindist
                
            exit
        
        else
        
            print*, 'New point:'
            
            write(*,'(f20.8)') xk
            
            print*, 'The distance between the functions equals:'
        
            write(*,'(f12.8)'), rho_y(Psi(xk)+a,Phi(xk))
        
        endif
        
    enddo
    
    print*,''
    print*,'--------------------------------'
    print*,''
    
    print*, 'Coincidence point: '
    
    write(*,'(f12.8)') xknext
    
    print*, 'The distance between the functions equals:'
        
    write(*,'(f12.8)'), rho_y(Psi(xknext)+a,Phi(xknext))
        
    print*, 'This was made in ', itercount, ' steps.'
    
        print*, ''
        print*, ''
        print*, ''
        print*, 'Solution is', xknext
        print*, ''
        print*, ''
        print*, ''                                                                    
        write(100,'(f12.8,1x)') rho_y(Psi(xknext) + a,Phi(xknext))
        write(110,'(f20.8,1x)') xknext
        
    
    xk = 165.108680209104
    
    write(*,'(1a,f12.8)') 'The approx distance: ', rho_y(Psi(xk) + a,Phi(xk))
            
    return
    
end subroutine Overlappoints_random_search
