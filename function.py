
import numpy as np

c1 = [3, 5] # n мерные вектора можно поменять цифры
c2 = [2, 9]

c1 = np.array(c1)
c2 = np.array(c2)

x = [3, 5]
y = [2, 5]

x = np.array(x)
y = np.array(y)


p = [3, 5] #вектор
n = 2
gamma = [3, 5] #гамма вектор переименовать
a = 1000 # не нашли описание
b = 1

p = np.array(p)
gamma = np.array(gamma)
def rhu_y(x,y):#Критерий нашей проверки (7) в статье 02,04,2023
    rhu_y = max(abs(x - y))
    return rhu_y

print(rhu_y(x,y))


def rhu_x(x,y):#Критерий нашей проверки (7) в статье 02,04,2023
    rhu_x = 2 * max(abs(x - y))/(c2 - c1) # c2 - c1 максимальная и минимальная возможная цена
    return rhu_x

print(rhu_x(x,y))


# p - точка которую мы находим, цены на товары если товаров n то P n мерный вектор
# n - колличество итераций
# gamma - бюджет( задаем сами )
# a - критерии модели, прописываем вручную
# b - критерии модели, прописываем вручную


#  Ди и си могут вернуть м мерный векторн рассмотреть случаи где м = н и м<н нашли равновесие на часть товаров


def D(p):# должен получиться вектор N мерный
    d = 1 / (n * p) * np.dot(gamma,p) # А. В. Арутюнов, Н. Г. Павлова, А. А. Шананин 11 стр
    return d
print(D(p))

def S(p):
    S= (((a + (b ** 2)) * p)/(b * ((a**2 + b**2)**0.5))) * (np.dot(2,p)**(-1/2)) - 1/n**0.5 # А. В. Арутюнов, Н. Г. Павлова, А. А. Шананин 11 стр
    return S
print(S(p))
print(np.dot(gamma,p))

# проверить утверждение 11 и 12 . В. Арутюнов, Н. Г. Павлова, А. А. Шананин 11 , 12 стр
# найти пару примеров удовлетворяющие этим условиям и проверить их
# варировать одно из переменных и посмотреть как это влияет на точку рановесия сделать выводу





